name: Pipeline Terraform AWS infraestrutura Kubernetes

on:
  push:
    branches:
      - '*'
  pull_request:
    types: [closed]
      
jobs:

  terraform_plan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_REGION }}

      - name: Terraform Init
        run: terraform init

      - name: AWS Plan Copy
        id: copyfrom
        run: |
          if aws s3 ls s3://terraformestado/terraform.tfstate > /dev/null 2>&1
          then
            aws s3 cp s3://terraformestado/terraform.tfstate terraform.tfstate
          else
            echo "terraform.tfstate does not exist in the S3 bucket"
          fi

      - name: Terraform Plan
        id: plan
        run: terraform plan 

  create_pull_request:
    needs: terraform_plan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Update Terraform configuration with commit ${{ github.sha }}"
          title: "Update Terraform configuration"
          body: "This PR updates the Terraform configuration."
          branch: "update-terraform-configuration-${{ github.run_number }}"
          base: "master"

  deploy_infra:
    if: github.event_name == 'pull_request' && github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'master'
    needs: create_pull_request
    runs-on: ubuntu-latest
    steps:
      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve